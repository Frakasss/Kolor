#pragma once
#include <Gamebuino-Meta.h>


//########################################################################################## PLAYER 1
const uint8_t PLAYER1[] = {
    6, 6, 0x01, 0x00, 0, 0x0,  1,
    0xba, 0xaa, 0xab, 
    0xaa, 0xda, 0xda, 
    0xaa, 0xda, 0xda, 
    0xaa, 0xaa, 0xaa, 
    0xaa, 0x00, 0xaa, 
    0xba, 0xaa, 0xab
};

const uint8_t PAINT1[] = {
    6,6,0x01,0x00,0,0x0,1,
    0xbb, 0xbb, 0xbb,
    0xbb, 0xbb, 0xbb,
    0xbb, 0xbb, 0xbb,
    0xbb, 0xbb, 0xbb,
    0xbb, 0xbb, 0xbb,
    0xbb, 0xbb, 0xbb
};

const uint8_t CPU1[] = {
    6, 6, 0x01, 0x00, 0, 0x0,  1,
    0xbb, 0xaa, 0xbb,
    0xef, 0xff, 0xff,
    0xef, 0xaf, 0xaf,
    0xef, 0xff, 0xff,
    0xef, 0x00, 0x0f,
    0xef, 0xff, 0xff
};

//########################################################################################## PLAYER 2
const uint8_t PLAYER2[] = {
    6, 6, 0x01, 0x00, 0, 0x0,  1,
    0x12, 0x22, 0x21,
    0x22, 0xd2, 0xd2,
    0x22, 0xd2, 0xd2,
    0x22, 0x22, 0x22,
    0x22, 0x00, 0x22,
    0x12, 0x22, 0x21
};
const uint8_t PAINT2[] = {
    6,6,0x01,0x00,0,0x0,1,
    0x11, 0x11, 0x11,
    0x11, 0x11, 0x11,
    0x11, 0x11, 0x11,
    0x11, 0x11, 0x11,
    0x11, 0x11, 0x11,
    0x11, 0x11, 0x11
};

const uint8_t CPU2[] = {
    6, 6, 0x01, 0x00, 0, 0x0,  1,
    0x11, 0x22, 0x11,
    0xef, 0xff, 0xff,
    0xef, 0x2f, 0x2f,
    0xef, 0xff, 0xff,
    0xef, 0x00, 0x0f,
    0xef, 0xff, 0xff
};


//########################################################################################## PLAYER 3
const uint8_t PLAYER3[] = {
    6, 6, 0x01, 0x00, 0, 0x0,  1,
    0x54, 0x44, 0x45,
    0x44, 0xd4, 0xd4,
    0x44, 0xd4, 0xd4,
    0x44, 0x44, 0x44,
    0x44, 0x00, 0x44,
    0x54, 0x44, 0x45
};
const uint8_t PAINT3[] = {
    6,6,0x01,0x00,0,0x0,1,
    0x55, 0x55, 0x55,
    0x55, 0x55, 0x55,
    0x55, 0x55, 0x55,
    0x55, 0x55, 0x55,
    0x55, 0x55, 0x55,
    0x55, 0x55, 0x55
};

const uint8_t CPU3[] = {
    6, 6, 0x01, 0x00, 0, 0x0,  1,
    0x55, 0x44, 0x55,
    0xef, 0xff, 0xff,
    0xef, 0x4f, 0x4f,
    0xef, 0xff, 0xff,
    0xef, 0x00, 0x0f,
    0xef, 0xff, 0xff
};


//########################################################################################## PLAYER 4
const uint8_t PLAYER4[] = {
    6, 6, 0x01, 0x00, 0, 0x0,  1,
    0x69, 0x99, 0x96,
    0x99, 0xd9, 0xd9,
    0x99, 0xd9, 0xd9,
    0x99, 0x99, 0x99,
    0x99, 0x00, 0x99,
    0x69, 0x99, 0x96
};
const uint8_t PAINT4[] = {
    6,6,0x01,0x00,0,0x0,1,
    0x66, 0x66, 0x66,
    0x66, 0x66, 0x66,
    0x66, 0x66, 0x66,
    0x66, 0x66, 0x66,
    0x66, 0x66, 0x66,
    0x66, 0x66, 0x66
};

const uint8_t CPU4[] = {
    6, 6, 0x01, 0x00, 0, 0x0,  1,
    0x66, 0x99, 0x66,
    0xef, 0xff, 0xff,
    0xef, 0x9f, 0x9f,
    0xef, 0xff, 0xff,
    0xef, 0x00, 0x0f,
    0xef, 0xff, 0xff
};


//########################################################################################## LANDSCAPE
const uint8_t GROUND_6X6[] = {
    12, 6, 0x01, 0x00, 0, 0xff, 1,
    0xee, 0xee, 0xed, 0x00, 0x00, 0x00,
    0xed, 0xed, 0xed, 0x00, 0x00, 0x00,
    0xee, 0xee, 0xed, 0x00, 0x00, 0x00,
    0xed, 0xed, 0xed, 0x00, 0x00, 0x00,
    0xee, 0xee, 0xed, 0x00, 0x00, 0x00,
    0xdd, 0xdd, 0xde, 0x00, 0x00, 0x00
};


//########################################################################################## ARROWS LEFT / RIGHT
const uint8_t POINTERLEFT[] = {
    6, 6, 0x01, 0x00, 0, 0xff, 1, 0x00, 0xd0, 0x0f,
    0x0d, 0xd0, 0xff,
    0xdd, 0xdf, 0xff,
    0xdd, 0xdf, 0xff,
    0x0d, 0xd0, 0xff,
    0x00, 0xd0, 0x0f
};

const uint8_t POINTERRIGHT[] = {
    6, 6, 0x01, 0x00, 0, 0xff, 1,
    0xd0, 0x0f, 0x00,
    0xdd, 0x0f, 0xf0,
    0xdd, 0xdf, 0xff,
    0xdd, 0xdf, 0xff,
    0xdd, 0x0f, 0xf0,
    0xd0, 0x0f, 0x00
};


//########################################################################################## BUTTONS
const uint8_t BUTTONS[] = {
    21, 7, 0x01, 0x00, 0, 0x1, 1,
    0x11, 0xff, 0xf1, 0x11, 0xff, 0xff, 0xf1, 0x1f, 0xff, 0xff, 0x10,
    0x11, 0xff, 0xf1, 0x1f, 0xff, 0xdf, 0xff, 0xff, 0xdd, 0xff, 0xf0,
    0xff, 0xff, 0xff, 0xff, 0xfd, 0xfd, 0xff, 0xff, 0xdd, 0xff, 0xf0,
    0xff, 0xff, 0xff, 0xff, 0xfd, 0xdd, 0xff, 0xff, 0xdf, 0xdf, 0xf0,
    0xee, 0xff, 0xfe, 0xef, 0xfd, 0xfd, 0xff, 0xff, 0xdd, 0xdf, 0xf0,
    0x11, 0xff, 0xf1, 0x1e, 0xff, 0xff, 0xfe, 0xef, 0xff, 0xff, 0xe0,
    0x11, 0xee, 0xe1, 0x11, 0xee, 0xee, 0xe1, 0x1e, 0xee, 0xee, 0x10
};

const uint8_t BUTTONMENU[] = {
    17, 7, 0x01, 0x00, 0, 0x1, 1,
    0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x10,
    0xfd, 0xed, 0xdf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0,
    0xfd, 0xde, 0xdf, 0xdd, 0xfd, 0xdf, 0xfd, 0xfd, 0xf0,
    0xfd, 0xff, 0xdf, 0xdf, 0xfd, 0xfd, 0xfd, 0xfd, 0xf0,
    0xfd, 0xff, 0xdf, 0xfd, 0xfd, 0xfd, 0xfd, 0xdf, 0xf0,
    0xef, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0,
    0x1e, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0x10
};


//########################################################################################## PODIUM
const uint8_t PODIUM[] = {
    60,   // frame width
    30,   // frame height
    0x01, // frames (lower byte)
    0x00, // frames (upper byte)
    0,    // frame loop
    0xff, // transparent color
    1,    // indexed color mode
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xdd, 0xdd, 0xdd, 0xdd, 0xd0, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xdd, 0xdd, 0xdd, 0xdd, 0x00, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xdd, 0xdd, 0xdd, 0xdd, 0xd0, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xdd, 0xdd, 0xdd, 0xdd, 0xd0, 0xdd, 0xdd, 0xdd, 0xdd, 0xd4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xdd, 0xdd, 0xdd, 0xdd, 0xd0, 0xdd, 0xdd, 0xdd, 0x4d, 0xd4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xdd, 0xdd, 0xdd, 0xdd, 0x00, 0x0d, 0xdd, 0xdd, 0xdd, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0x22, 0x22, 0x22, 0x22, 0x22, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0x44, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0x22, 0x22, 0x22, 0x22, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd2, 0xdd, 0x22, 0xd2, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xdd, 0xdd, 0xdd, 0xd0, 0x00, 0xdd, 0xd2, 0xdd, 0x2d, 0xd2, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd4, 0xd4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0x0d, 0xdd, 0xdd, 0x2d, 0xd2, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd4, 0xdd, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0x0d, 0xdd, 0xdd, 0x2d, 0xdd, 0xdd, 0xdd, 0xad, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd4, 0xdd, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xdd, 0xdd, 0xdd, 0xdd, 0xd0, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xda, 0xdd, 0xad, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd4, 0xd4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xdd, 0xdd, 0xdd, 0xdd, 0x0d, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xaa, 0xad, 0xda, 0xad, 0xdd, 0xdd, 0xdd, 0xd4, 0xdd, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xdd, 0xdd, 0xdd, 0xd0, 0x00, 0x0d, 0xdd, 0xdd, 0xdd, 0xdd, 0xaa, 0xaa, 0xaa, 0xaa, 0xdd, 0xdd, 0xdd, 0xdd, 0xd4, 0xdd, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xda, 0xaa, 0xaa, 0xad, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xda, 0xaa, 0xaa, 0xad, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd,
    0xdd, 0x8d, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xad, 0xaa, 0xaa, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd,
    0xdd, 0x8d, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xad, 0xda, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd0, 0x00, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd,
    0xdd, 0x8d, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xad, 0xdd, 0xad, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0x0d, 0xdd, 0xdd, 0xdd, 0xdd,
    0xd8, 0x8d, 0x88, 0x8d, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xad, 0xdd, 0xad, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd0, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd,
    0x88, 0x88, 0xdd, 0xdd, 0xdd, 0x88, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xad, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0x0d, 0xdd, 0xdd, 0xdd, 0xd6,
    0x88, 0x8d, 0xdd, 0x88, 0x88, 0x8d, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xad, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0x0d, 0xdd, 0xdd, 0xd6, 0xd6,
    0x88, 0x88, 0x88, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd0, 0x00, 0xdd, 0xdd, 0xdd, 0xdd, 0x66,
    0x88, 0x88, 0x88, 0x8d, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd6, 0x66,
    0x88, 0x88, 0x88, 0x88, 0x88, 0x8d, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0x66, 0x6d, 0x66, 0x66
};


//########################################################################################## ICONS WEAPONS
const uint8_t WEAPON1[] = {
    21,   // frame width
    21,   // frame height
    0x01, // frames (lower byte)
    0x00, // frames (upper byte)
    0,    // frame loop
    0xff, // transparent color
    1,    // indexed color mode
    0xff, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdf, 0xf0,
    0xfd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xf0,
    0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd0,
    0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd0,
    0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd0,
    0xdd, 0xdf, 0xff, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd0,
    0xdd, 0xff, 0xff, 0xfd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd0,
    0xdd, 0xfd, 0xfd, 0xfd, 0xff, 0xdf, 0xfd, 0xdd, 0xdd, 0xdd, 0xd0,
    0xdd, 0xff, 0xff, 0xfd, 0xff, 0xdf, 0xfd, 0xdd, 0xdd, 0xdd, 0xd0,
    0xdd, 0xff, 0xff, 0xfd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd0,
    0xdd, 0xdf, 0xff, 0xdd, 0xdd, 0xdf, 0xfd, 0xdd, 0xdd, 0xdd, 0xd0,
    0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdf, 0xfd, 0xdd, 0xfd, 0xdd, 0xd0,
    0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdf, 0xdd, 0xd0,
    0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdf, 0xfd, 0xff, 0xdf, 0xfd, 0xd0,
    0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdf, 0xfd, 0xff, 0xdf, 0xfd, 0xd0,
    0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdf, 0xdd, 0xd0,
    0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xfd, 0xdd, 0xd0,
    0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd0,
    0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd0,
    0xfd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xf0,
    0xff, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdf, 0xf0
};


const uint8_t WEAPON2[] = {
    21,   // frame width
    21,   // frame height
    0x01, // frames (lower byte)
    0x00, // frames (upper byte)
    0,    // frame loop
    0xff, // transparent color
    1,    // indexed color mode
    0xff, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdf, 0xf0,
    0xfd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xf0,
    0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd0,
    0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd0,
    0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd0,
    0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd0,
    0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd0,
    0xdd, 0xdf, 0xff, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xfd, 0xdd, 0xd0,
    0xdd, 0xff, 0xff, 0xfd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdf, 0xdd, 0xd0,
    0xdd, 0xfd, 0xfd, 0xfd, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xfd, 0xd0,
    0xdd, 0xff, 0xff, 0xfd, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xfd, 0xd0,
    0xdd, 0xff, 0xff, 0xfd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdf, 0xdd, 0xd0,
    0xdd, 0xdf, 0xff, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xfd, 0xdd, 0xd0,
    0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd0,
    0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd0,
    0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd0,
    0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd0,
    0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd0,
    0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd0,
    0xfd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xf0,
    0xff, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdf, 0xf0
};

const uint8_t WEAPON3[] = {
    21,   // frame width
    21,   // frame height
    0x01, // frames (lower byte)
    0x00, // frames (upper byte)
    0,    // frame loop
    0xff, // transparent color
    1,    // indexed color mode
    0xff, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdf, 0xf0,
    0xfd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xf0,
    0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xfd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd0,
    0xdd, 0xdd, 0xdd, 0xdf, 0xdd, 0xdd, 0xdf, 0xdd, 0xdd, 0xdd, 0xd0,
    0xdd, 0xdd, 0xfd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xfd, 0xdd, 0xd0,
    0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xfd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd0,
    0xdd, 0xdd, 0xdd, 0xfd, 0xdd, 0xdd, 0xdd, 0xfd, 0xdd, 0xdd, 0xd0,
    0xdd, 0xdf, 0xdd, 0xdd, 0xff, 0xff, 0xfd, 0xdd, 0xdf, 0xdd, 0xd0,
    0xdd, 0xdd, 0xdd, 0xdf, 0xff, 0xff, 0xff, 0xdd, 0xdd, 0xdd, 0xd0,
    0xdd, 0xdd, 0xdd, 0xdf, 0xdd, 0xfd, 0xdf, 0xdd, 0xdd, 0xdd, 0xd0,
    0xdd, 0xfd, 0xdf, 0xdf, 0xdd, 0xfd, 0xdf, 0xdf, 0xdd, 0xfd, 0xd0,
    0xdd, 0xdd, 0xdd, 0xdf, 0xff, 0xff, 0xff, 0xdd, 0xdd, 0xdd, 0xd0,
    0xdd, 0xdd, 0xdd, 0xdf, 0xff, 0xff, 0xff, 0xdd, 0xdd, 0xdd, 0xd0,
    0xdd, 0xdf, 0xdd, 0xdd, 0xff, 0xff, 0xfd, 0xdd, 0xdf, 0xdd, 0xd0,
    0xdd, 0xdd, 0xdd, 0xfd, 0xdd, 0xdd, 0xdd, 0xfd, 0xdd, 0xdd, 0xd0,
    0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xfd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd0,
    0xdd, 0xdd, 0xfd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xfd, 0xdd, 0xd0,
    0xdd, 0xdd, 0xdd, 0xdf, 0xdd, 0xdd, 0xdf, 0xdd, 0xdd, 0xdd, 0xd0,
    0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xfd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd0,
    0xfd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xf0,
    0xff, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdf, 0xf0
};



const uint8_t WEAPON4[] = {
    21,   // frame width
    21,   // frame height
    0x01, // frames (lower byte)
    0x00, // frames (upper byte)
    0,    // frame loop
    0xff, // transparent color
    1,    // indexed color mode
    0xff, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdf, 0xf0,
    0xfd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xf0,
    0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd0,
    0xdd, 0xdd, 0xdd, 0xdd, 0xff, 0xff, 0xfd, 0xdd, 0xdd, 0xdd, 0xd0,
    0xdd, 0xdd, 0xdd, 0xff, 0xdd, 0xdd, 0xdf, 0xfd, 0xdd, 0xdd, 0xd0,
    0xdd, 0xdd, 0xdf, 0xdd, 0xdd, 0xdd, 0xdd, 0xff, 0xdd, 0xdd, 0xd0,
    0xdd, 0xdd, 0xfd, 0xdd, 0xdd, 0xdd, 0xdf, 0xff, 0xfd, 0xdd, 0xd0,
    0xdd, 0xdd, 0xfd, 0xdd, 0xdd, 0xdd, 0xff, 0xfd, 0xfd, 0xdd, 0xd0,
    0xdd, 0xdf, 0xdd, 0xdd, 0xdd, 0xdf, 0xff, 0xdd, 0xdf, 0xdd, 0xd0,
    0xdd, 0xdf, 0xdd, 0xdd, 0xdd, 0xff, 0xfd, 0xdd, 0xdf, 0xdd, 0xd0,
    0xdd, 0xdf, 0xdd, 0xdd, 0xdf, 0xff, 0xdd, 0xdd, 0xdf, 0xdd, 0xd0,
    0xdd, 0xdf, 0xdd, 0xdd, 0xff, 0xfd, 0xdd, 0xdd, 0xdf, 0xdd, 0xd0,
    0xdd, 0xdf, 0xdd, 0xdf, 0xff, 0xdd, 0xdd, 0xdd, 0xdf, 0xdd, 0xd0,
    0xdd, 0xdd, 0xfd, 0xff, 0xfd, 0xdd, 0xdd, 0xdd, 0xfd, 0xdd, 0xd0,
    0xdd, 0xdd, 0xff, 0xff, 0xdd, 0xdd, 0xdd, 0xdd, 0xfd, 0xdd, 0xd0,
    0xdd, 0xdd, 0xdf, 0xfd, 0xdd, 0xdd, 0xdd, 0xdf, 0xdd, 0xdd, 0xd0,
    0xdd, 0xdd, 0xdd, 0xff, 0xdd, 0xdd, 0xdf, 0xfd, 0xdd, 0xdd, 0xd0,
    0xdd, 0xdd, 0xdd, 0xdd, 0xff, 0xff, 0xfd, 0xdd, 0xdd, 0xdd, 0xd0,
    0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd0,
    0xfd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xf0,
    0xff, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdf, 0xf0
};


const uint8_t GIVEUP[] = {
    21,   // frame width
    21,   // frame height
    0x01, // frames (lower byte)
    0x00, // frames (upper byte)
    0,    // frame loop
    0xff, // transparent color
    1,    // indexed color mode
    0xff, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdf, 0xf0,
    0xfd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xf0,
    0xdd, 0xdd, 0xdd, 0xdf, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd0,
    0xdd, 0xdd, 0xdd, 0xfd, 0xfd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd0,
    0xdd, 0xdd, 0xdd, 0xfd, 0xff, 0xdd, 0xdf, 0xff, 0xdd, 0xdd, 0xd0,
    0xdd, 0xdd, 0xdf, 0xdf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xdd, 0xd0,
    0xdd, 0xdd, 0xdf, 0xdf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xdd, 0xd0,
    0xdd, 0xdd, 0xdf, 0xdf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 0xd0,
    0xdd, 0xdd, 0xdf, 0xdf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 0xd0,
    0xdd, 0xdd, 0xfd, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 0xd0,
    0xdd, 0xdd, 0xfd, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xdd, 0xd0,
    0xdd, 0xdd, 0xfd, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xdd, 0xd0,
    0xdd, 0xdd, 0xfd, 0xfd, 0xdf, 0xff, 0xff, 0xff, 0xff, 0xdd, 0xd0,
    0xdd, 0xdd, 0xfd, 0xfd, 0xdd, 0xff, 0xfd, 0xdd, 0xff, 0xdd, 0xd0,
    0xdd, 0xdf, 0xdf, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdf, 0xdd, 0xd0,
    0xdd, 0xdf, 0xdf, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd0,
    0xdd, 0xdf, 0xdf, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd0,
    0xdd, 0xdf, 0xdf, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd0,
    0xdd, 0xdd, 0xfd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd0,
    0xfd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xf0,
    0xff, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdf, 0xf0
};
